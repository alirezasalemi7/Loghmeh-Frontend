
variables:
 DOCKER_HOST: tcp://docker:2375/
 DOCKER_DRIVER: overlay2
 KUBE_CONFIG: YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQoKIyBEZWZpbmUgdGhlIGNsdXN0ZXIKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VONVJFTkRRV0pEWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpkMDFFVlhkTlZFVjZUVVJyTVU5V2IxaEVWRTEzVFVSUmVVOVVSWHBOUkdzeFQxWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVGxkeUNqZ3dLMFJ5YUZaMlFrbHFXbWR2VVZKQmNtMVdhbmRhT0RjMWIwbDRRbVF6U0hvdlFVUnhNVGhUYnpCbU9FOHhRV2RtZUZBeE4waHNUREpzTjA1UVpWY0thRWxWUjFsNU1WVjZTblZFYVRCeWFuRlZaV3Q2ZVcxbFRHOXVkMnQzWkVaMVkwUlBObWRTZEVkb2JqZHlRaTh6ZDBWclNqUTNPWGRNSzBwU2RGZ3pTd3BTVkVReE5qRTFkRUZqUTNWNVFubG9ialJVVUZwWVZYUlBUemxvVUVrcmVWUm9TR0l5V1V4UlJrVTNaazVWZUdaclZ6aE9aRWQwYm1KblpuaG1XSFkzQ25aMU1WaE9SRXBUVTFCRlMwbFBaRlp6VkVoR05XVmFTa3BpY0N0V05tNVJLemhtVDNjNGJWTm9hWFpvY0hSRU5URkhiSGxuT0ZsMGIwOW5jQ3RuZHpZS2RrSndaR2w0ZEhoeUwxZzVXbTFHZUhaVFltWmtXVkowZDBVMVJUZFpaRTVhVTJkV2RYUjJVWHBvZVZSVWNqUk1VMDV5WVZKRFNUZFZTMngzUVdkamRRcFJaVEZuYURnelNqRktWa2RaVHk5c1dtbHpRMEYzUlVGQllVMXFUVU5GZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEZRa0ZMZGtsdGNubzVURXQwZUdKWWRHTnFORzlhTmxCYWNFbExjVkFLVmtOMlRtSjRVbXh2Vml0bU5GQm5iRXhDYmxKaVNrVXdXVmN2TDNRd1RHZHFjR1pWVFV3MVpGTm1NVEprV2k5SWFFRklPVXRqYWs1b01UZ3pSelp1VlFwWmJFUXJZbXg0Y1dvNEsyMUJVMUZqY3k5QlNsWnhLM0ZVSzFNNWNTdFFZMXBZUlZSNlkyVkJTSEZtVUZkbVZURmxUMFJVWWpoM09YQTFhaXR6YVVjeUNqVmFkMFpHYjIxVlNHTkpaRWxKZW14cVExRXZTSEJKWW5wbFUxaG1aMEZhU0dkdFlXbEZOR1ZFU1dKcVJUUTVkV2t4VlVneVlsbEdWRk5wUm5oemNDOEtibWRyVkhwSWMwRXhUa1pXYTFNd01tTkZlRmRSVm1Jek5ERlZUMXBZYkRaV1UxSlVRVU5zVTBsMVRrOVVOMUJVUjI0NGJYVkVaSGgxVEhSaE5UZE1TUW94U0hkUGVXZHhXR3BHWVVKRE1GQnBaMnBSZG5Rd2NXcFJkR2QwYm1GVFMwMUhOMVJNUlRrcmJFcHFhekZPYVVwMVpHOWFOek5ETHpSS05EMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KCiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTg1LjE2Ni4xMDUuNjo2NDQzCiAgbmFtZTogbXktY2x1c3RlcgoKIyBEZWZpbmUgdGhlIHVzZXIKdXNlcnM6Ci0gbmFtZTogYWxpcmV6YS1yZXphLW5zLXVzZXIKICB1c2VyOgogICAgYXMtdXNlci1leHRyYToge30KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTjVSRU5EUVdKRFowRjNTVUpCWjBsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZXVFZKTmQwVlJXVVJXVVZGRVJYZHdjbVJYU213S1kyMDFiR1JIVm5wTlFqUllSRlJKZDAxRVZYZE5WRVY2VFVSck1VOVdiMWhFVkUxM1RVUlJlVTlVUlhwTlJHc3hUMVp2ZDBaVVJWUk5Ra1ZIUVRGVlJRcEJlRTFMWVROV2FWcFlTblZhV0ZKc1kzcERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRsZHlDamd3SzBSeWFGWjJRa2xxV21kdlVWSkJjbTFXYW5kYU9EYzFiMGw0UW1RelNIb3ZRVVJ4TVRoVGJ6Qm1PRTh4UVdkbWVGQXhOMGhzVERKc04wNVFaVmNLYUVsVlIxbDVNVlY2U25WRWFUQnlhbkZWWld0NmVXMWxURzl1ZDJ0M1pFWjFZMFJQTm1kU2RFZG9iamR5UWk4emQwVnJTalEzT1hkTUswcFNkRmd6U3dwU1ZFUXhOakUxZEVGalEzVjVRbmxvYmpSVVVGcFlWWFJQVHpsb1VFa3JlVlJvU0dJeVdVeFJSa1UzWms1VmVHWnJWemhPWkVkMGJtSm5abmhtV0hZM0NuWjFNVmhPUkVwVFUxQkZTMGxQWkZaelZFaEdOV1ZhU2twaWNDdFdObTVSS3pobVQzYzRiVk5vYVhab2NIUkVOVEZIYkhsbk9GbDBiMDluY0N0bmR6WUtka0p3WkdsNGRIaHlMMWc1V20xR2VIWlRZbVprV1ZKMGQwVTFSVGRaWkU1YVUyZFdkWFIyVVhwb2VWUlVjalJNVTA1eVlWSkRTVGRWUzJ4M1FXZGpkUXBSWlRGbmFEZ3pTakZLVmtkWlR5OXNXbWx6UTBGM1JVRkJZVTFxVFVORmQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQlowdHJUVUU0UjBFeFZXUkZkMFZDQ2k5M1VVWk5RVTFDUVdZNGQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV4Q1VVRkVaMmRGUWtGTGRrbHRjbm81VEV0MGVHSllkR05xTkc5YU5sQmFjRWxMY1ZBS1ZrTjJUbUo0VW14dlZpdG1ORkJuYkV4Q2JsSmlTa1V3V1ZjdkwzUXdUR2RxY0daVlRVdzFaRk5tTVRKa1dpOUlhRUZJT1V0amFrNW9NVGd6UnpadVZRcFpiRVFyWW14NGNXbzRLMjFCVTFGamN5OUJTbFp4SzNGVUsxTTVjU3RRWTFwWVJWUjZZMlZCU0hGbVVGZG1WVEZsVDBSVVlqaDNPWEExYWl0emFVY3lDalZhZDBaR2IyMVZTR05KWkVsSmVteHFRMUV2U0hCSllucGxVMWhtWjBGYVNHZHRZV2xGTkdWRVNXSnFSVFE1ZFdreFZVZ3lZbGxHVkZOcFJuaHpjQzhLYm1kclZIcEljMEV4VGtaV2ExTXdNbU5GZUZkUlZtSXpOREZWVDFwWWJEWldVMUpVUVVOc1UwbDFUazlVTjFCVVIyNDRiWFZFWkhoMVRIUmhOVGRNU1FveFNIZFBlV2R4V0dwR1lVSkRNRkJwWjJwUmRuUXdjV3BSZEdkMGJtRlRTMDFITjFSTVJUa3JiRXBxYXpGT2FVcDFaRzlhTnpOREx6UktORDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgICB0b2tlbjogZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluQm5VRTlCTURreGVtaERlRk56VVhaM2NHRlNXRnBXYVV3dGIwUTRiVzh4UlhoVlNWQnRiamR1WVVFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpoYkdseVpYcGhMWEpsZW1FdGJuTWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObFkzSmxkQzV1WVcxbElqb2lZV3hwY21WNllTMXlaWHBoTFc1ekxYVnpaWEl0ZEc5clpXNHRhamQ0TW1JaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVlXeHBjbVY2WVMxeVpYcGhMVzV6TFhWelpYSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSTFNemN3TUdVM01DMHhaR0UyTFRRd1pEZ3RPR1poT0MxaE56UTVNek5oTmpnNE1XVWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WVd4cGNtVjZZUzF5WlhwaExXNXpPbUZzYVhKbGVtRXRjbVY2WVMxdWN5MTFjMlZ5SW4wLlV6Yjd3YVRGc1oyRDNieDR4T3gycFZyVVQyaENVbVo2TTJGNm9KZ1NmZnQxQjVSZFRwWXlUMHJGTVdGT1ctSGY3NkNKektPNzVQY25HY3loaWllVDRNVVEybnMwcy1QUEd2d3FZSUluZXNEcURTekpJVHBIeHd4cW1yaWh2TWpSNFlVVUhFZkVsdGhlSDlwM083a09rU1BiVnNSZEtsRENaaUxsWVI2dktIVVNmWmZHODA1dDc3NUgzSm52X2ZPNXdNODFSMHR4eHQ1RlFZbW80c2Vob2RXTWRDWEZZNE1aNVlZV0h1WlJHYkR3bFg3TDIxdEhCMXQ3Vmp4NmhtYmxPQmdUalJ0Z0szYVhuWkZIUV9JNmFZV1R4R0VBV2xXeWdiVUN3R05ka0ZSVTl3VFJUaEU1SlVJWFdYVVBrSDFMc2JIZDFWZEhZRl9GamdmT1FaRURxUQoKIyBEZWZpbmUgdGhlIGNvbnRleHQ6IGxpbmtpbmcgYSB1c2VyIHRvIGEgY2x1c3Rlcgpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbXktY2x1c3RlcgogICAgbmFtZXNwYWNlOiBhbGlyZXphLXJlemEtbnMKICAgIHVzZXI6IGFsaXJlemEtcmV6YS1ucy11c2VyCiAgbmFtZTogYWxpcmV6YS1yZXphLW5zCgojIERlZmluZSBjdXJyZW50IGNvbnRleHQKY3VycmVudC1jb250ZXh0OiBhbGlyZXphLXJlemEtbnM=
 OVPN: "Y2xpZW50CmRldiB0dW4KcHJvdG8gdWRwCnJlbW90ZSAxNzguNjMuMTMyLjI0MyAxMTk0CnJlc29s
di1yZXRyeSBpbmZpbml0ZQpub2JpbmQKcGVyc2lzdC1rZXkKcGVyc2lzdC10dW4KcmVtb3RlLWNl
cnQtdGxzIHNlcnZlcgphdXRoIFNIQTUxMgpjaXBoZXIgQUVTLTI1Ni1DQkMKaWdub3JlLXVua25v
d24tb3B0aW9uIGJsb2NrLW91dHNpZGUtZG5zCmJsb2NrLW91dHNpZGUtZG5zCnZlcmIgMwo8Y2E+
Ci0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUWpDQ0FpcWdBd0lCQWdJVUVmWENmRkNW
STg2TndDM3M0ai85a2h3T3JUY3dEUVlKS29aSWh2Y05BUUVMCkJRQXdFekVSTUE4R0ExVUVBd3dJ
UTJoaGJtZGxUV1V3SGhjTk1qQXdNek13TVRNd05USTNXaGNOTXpBd016STQKTVRNd05USTNXakFU
TVJFd0R3WURWUVFEREFoRGFHRnVaMlZOWlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRApnZ0VQ
QURDQ0FRb0NnZ0VCQVBPVlBmdVhUYXNib2ZaZmlDOFhpOVIzUlF5d2lpaTQ4ekJncHFmRzFvaDhE
cWc2CkpweUZJOUNMZzE5aUVualp4NzRTUkpZUThudjRRZjdneFkrWWN6QU4zb2prWmNXTEJYeXMx
UU4vR21VNHlHSlEKQ2VZa3NCR0pwSzlFYmV2VFN3Y3QvNk5XbFd3QkFVeTlaSGQ2K3hXNlo0WFBr
dlF5Q2pyRDA0a3dEUENmZGpkVgpyV001TzVXK3RWVnF2TVgzemJ0RHlmL2VlYm95VzJpdytQaWFL
T2JhZGxRdlBVd2RUcEdtU0pYU2JlWU1rUWRiCkdhUy9MV2lQUWhUMlJGYXQwSVJJcVpoUFBGbFhI
QUlvblBTaHVTR1dQcUlmbnJiRFduOE5KNG14V1JORFRiTWEKZmRXWGZZVnJHTmt5U2wzNllnYWp4
MDBJdmp0aXlQTWFYRmp3cnRVQ0F3RUFBYU9CalRDQmlqQWRCZ05WSFE0RQpGZ1FVdzdkSDRrQU94
b0xxS2k0VkRmbUdpcGdZU0Fnd1RnWURWUjBqQkVjd1JZQVV3N2RINGtBT3hvTHFLaTRWCkRmbUdp
cGdZU0FpaEY2UVZNQk14RVRBUEJnTlZCQU1NQ0VOb1lXNW5aVTFsZ2hRUjljSjhVSlVqem8zQUxl
emkKUC8yU0hBNnROekFNQmdOVkhSTUVCVEFEQVFIL01Bc0dBMVVkRHdRRUF3SUJCakFOQmdrcWhr
aUc5dzBCQVFzRgpBQU9DQVFFQWJhTkNBNGJyOG5KMkZiUjZXNldFQ09OS0JZRHYrajU5TlN0bGVT
QWVMMFk2d0xaOEk1SGZCeG9FCndFYWJTUmNjSnVVa3R6VWlUZkJNTUZ0ejNHMU9Qa09jN3NIV2tr
ZjdVbHgwb004bzZrTFo0T1gvcm9salhRSkoKVm9OdlJIK0lDdmQ4UEFYZTluOTR1Wko0VGZ3bTZn
ci9vRDhkTEdoekFRNHI2WXhyc05oaUpRYWFuR1dsd3JuSwpCeVlEbHBrSnBKRk1odU9RNEFabDFa
dXlKQW5IdktUcTUyNTZpR2NjTC9neUE0TndFNHJDcEVEaVhValRVV0ZkCnFma0J4SlA4R0tkRUZ3
ZGUxOHlNTEcyNzNDcmF3dnVkRjFkc0VSdU51L09LQlhxS0JQSE1YaE5GdWEyNUxkbHcKZXdBTG9B
OXBJY1JuVWJ2QXkvMmRkb3lnbGNhUFBRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo8L2Nh
Pgo8Y2VydD4KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lS
QUxpcytWdG1HVGFLVkovY3hPalo3amN3RFFZSktvWklodmNOQVFFTEJRQXcKRXpFUk1BOEdBMVVF
QXd3SVEyaGhibWRsVFdVd0hoY05NakF3TXpNd01UTXdOVEk1V2hjTk16QXdNekk0TVRNdwpOVEk1
V2pBUk1ROHdEUVlEVlFRRERBWmpiR2xsYm5Rd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJE
d0F3CmdnRUtBb0lCQVFEdDlmVXRwQlhPQ3JENThTam8wOVZLVWQ3UEZvVzRuMFBXdys0Zm10bTNt
Z1BCaVdDZXJ3SDkKR2dnSmd3Mk16d3NkeFdIMS9RWm8yL01TRm9PRFJVU3lCcE0rL0JBY3RWMHI0
ZzV6RUo4czdVZ1ZIYm9aQW9iYwppVlRhd3FKTGNEdi93cEF4anlLaGlvR3JuY2NtbjE2MlQ1RUh5
VWpmZ2JpYnVhVzlGQ3dKbjJ5VWNTMW1xWitKCmNheG1VWnpORkdIb3lETWpMOWQ0aDdJWUREb25z
R2puMGQzRnhWSzZwSzI2UE91K0MyTm5GeFJKVGRqbkMxVWcKakE0cURJYlcyOGNHRlM1enAyRjlT
VHpuU21LcEFadmxGK3hjSFJkbVNCYjZoRFBQdVpCU0lveUhwM3dkQjFOagpTSFpvT0FpNHZXQTBp
UkUxbkdGSHE4Y0x4cmxVcmZjdkFnTUJBQUdqZ1o4d2dad3dDUVlEVlIwVEJBSXdBREFkCkJnTlZI
UTRFRmdRVTNnS3BqUUg4TUI2WHBYTFFJREdjK3JPeWkxVXdUZ1lEVlIwakJFY3dSWUFVdzdkSDRr
QU8KeG9McUtpNFZEZm1HaXBnWVNBaWhGNlFWTUJNeEVUQVBCZ05WQkFNTUNFTm9ZVzVuWlUxbGdo
UVI5Y0o4VUpVagp6bzNBTGV6aVAvMlNIQTZ0TnpBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFq
QUxCZ05WSFE4RUJBTUNCNEF3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDWVB4UnZZRHFVeE1F
NDk1RHhvNG9NU1BhZWxjeG1NTEwxL1JodGkKL0FhcXAyTHBrc2IvZE5KVldNQTNZNjkxZGQycGhr
UjV3NzloWENLTkk4NFJLNk9FMFdEVFZyS3pCeXQ1MUordApMUG84YS9adDIwUmZySmxYMzQ3Umpw
bWJadlNjbDJtN21oRUlUQjNwYXlacWYwazd3Wm0ybU93eVhvK0FlUGlLCi9kTG0xcEkzRWY0TG5Q
amhmZ2ZLU1JsUG5JL0pnb0lLZFMrbmRtYTNPVTRWOHZOMk9CeE5Sa1Azd1FzZWxTc2IKVmRwc1R4
WXRWa2FRaDcydGNKekcyWU91dVNvcTlVb0JiOWk3ZTNvWWtUd09oT3Q3bEhKQXplVWh0K2hqZWgv
aAp1Zk9xeTVSMGN1bVk2Ryt6YjZRN1ZwWUhnb1NTVnMzUUR1c1Bqck1nKzE1UnhObz0KLS0tLS1F
TkQgQ0VSVElGSUNBVEUtLS0tLQo8L2NlcnQ+CjxrZXk+Ci0tLS0tQkVHSU4gUFJJVkFURSBLRVkt
LS0tLQpNSUlFd0FJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLb3dnZ1NtQWdFQUFvSUJBUUR0
OWZVdHBCWE9DckQ1CjhTam8wOVZLVWQ3UEZvVzRuMFBXdys0Zm10bTNtZ1BCaVdDZXJ3SDlHZ2dK
Z3cyTXp3c2R4V0gxL1FabzIvTVMKRm9PRFJVU3lCcE0rL0JBY3RWMHI0ZzV6RUo4czdVZ1ZIYm9a
QW9iY2lWVGF3cUpMY0R2L3dwQXhqeUtoaW9HcgpuY2NtbjE2MlQ1RUh5VWpmZ2JpYnVhVzlGQ3dK
bjJ5VWNTMW1xWitKY2F4bVVaek5GR0hveURNakw5ZDRoN0lZCkREb25zR2puMGQzRnhWSzZwSzI2
UE91K0MyTm5GeFJKVGRqbkMxVWdqQTRxREliVzI4Y0dGUzV6cDJGOVNUem4KU21LcEFadmxGK3hj
SFJkbVNCYjZoRFBQdVpCU0lveUhwM3dkQjFOalNIWm9PQWk0dldBMGlSRTFuR0ZIcThjTAp4cmxV
cmZjdkFnTUJBQUVDZ2dFQkFNY3BHeW8yOGZULzU3MVpSUGNSREt2bU44ZzFQbmdWL0U1TXNBa05y
bmpIClU2dHcwa2dkaTFtTnB2cG5FRGt3dEVvWGdIVEViOC9sZnR3OXNaWjFyQmdmL3E4eGdqNjA0
S1V3encwbzlVQkIKM0Jtb1JyQlYrQSt1ZFRHZXd2ekdrOERzMDRoWEZ4SUMvYUpvTEYwNzk2WTRr
OWJqZGJWek9kSkVIOTVQZXNnVgpaQVdVVXR2VURiWGcvejhKK1BjTCtjbVZIUy9yTzZZVXl0eHBa
N0xHS0lSdHJZUGcyYnZ6NHQwb2VtejUrbUhhCkJuUktjdDVsZDNuRno0RVpSUEhSVXE4OWN5REph
Um5BaHpVWlY3dW9YQXUxY2hRcWN2MzNMeEMxWjV4YVNDd0cKZHpHR2tFb3daazdkbC93bTBaWGNU
WmxOZGs1ZlBtZ3FWa2NXZG5Bc1M1a0NnWUVBLzBuVjUvaHdlOGZXWDcrUwpiNDd1YUY4eGVEZDBO
amd1TWpJN2k3cFFtSlpmMFFobHJtNVFVd2llK3lFeTJMWGlCRzZiUVZ0Mnlic0JjNklKCmgrZUh4
Q0xaOHdrcldmc2JFcEpucFk4L1hHR2RML3R3M2oxa3l3Vk9BVTYxaENSKzYxKytwcVdzOW5xUTJ1
VUUKQk84MkN3UDl3UlNSc2VBcEU2TXVvS2tNZGFNQ2dZRUE3cC9CL2lxaUpPMlZEdzI2TC84T3U2
RVdxeEQwMnpkbApXRjdPWHQ2WGRHR1FxRTcrTEl4ZjNCaVovNERwTGJvdUxTaDQzTjRpK0JTUzNQ
OUdBS0loc1NUU3pCNzlmUVNzCkNQUWVTSkRKSWpMYkttZGM3N050aXhyOWk2Sm8rUnlESlJWWU5U
WEkrM20rOUU2V0Vhb051MDgvMVJhM0lTZmsKcm9VaGFxZnVXUVVDZ1lFQXVJMldPQmFncXJ0elBO
RHZlZnFvVzRmRjZaU2RUTDBjbUdrOEp1MVFhcDc3TWRDUwpRYUc2Syt6bGtjTVVVUnBjQkx3NVBP
eDBXYTM1aExDMWx5eElPQURCOHpMRHhrOEQ2VTh4NHJ4R0gvRHBnOUNRCmJmbVFManp0Z1lCM05N
cDFmbzgrOHBaL0RjalpnNFZnZkhpNlp3aEJvQjNRbmZqaGVUTFUrSXg5VjJVQ2dZRUEKeTgvWU9l
YmdKdnBsM2oyelVWdGdraEc4OHMvQTA1dzFDNDJ1Wm9sb2d4YnlIMCtZK1NQTW5Jakd2OXl6VFVO
QQpQWUhiK1lvaUJCSk9ma1BxM28rY2gxa1VVeFFGSHNybXhaNzhYcTZMbkpJamI4eHBMTExzVld2
d00xdThuVWtsCkduOW9uOG9ZcC9JTWowNndEdFpZZEN2ME1XVDlkV3hGZm1wbmFGbVcwcUVDZ1lF
QWdYbXFFbkZyN3A5YzNTeVoKWjVyclB4SitYdEhMQUJXOENyQittZ1l2UzBnbCs4SXBkN2JVV0hM
WGVHQWNRZFpXMEFvS3AzUnY0NTNUbVFFUApFNW9FZzIzZHUyVnEvZDVRWGx2dVNISmhwemJ2Z1dS
cFp6UHozMzZWUmNac3RNVVoza3F3THU1N0ZHVUE4UGdkClRzamVyd0NOd3dCeHdSdlZCbWRoZ1FO
UXlGTT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo8L2tleT4KPHRscy1jcnlwdD4KLS0tLS1C
RUdJTiBPcGVuVlBOIFN0YXRpYyBrZXkgVjEtLS0tLQphM2I0OGM0YWQ4OTE0YjM1MzRhZGU0ZmQw
MDVkMjRlZApmYjI0NTBlODQ1Y2Y5MTMyMTA2MmU5MGQ2NmRmMGViNAowZDc4MWZhYWVhMDRkZmIw
ZjUxMDQ5ODE0NWU3OGY2YwplZDM4MDI5MzRkMTNiZDE2YmY2ZTdjZTA0OGM2OTc2Ywo4NTc0Yzdl
YjE3ZTJjYmFmMWU4ZGY5NDE1MmRlZjg0ZQpkNjZiNDFmNjRhZTRiNzM0NGNkY2JlMzU4MTE1ZjRl
YwphMmIzNTMxZmNiZTFlMjM2N2FjNGMzZTMwMmE2NjhhMgozZTAyMTBlNzg0MDNlMDJjOWRiYzc2
MWZiYmUzZjQ3OAo0YWM2NzE3Njc3ZWY2NDhlOWExOTRlNmIzN2RlZWM5Nwo3NTUzYWFlZGJmZDQ0
ZDc2ZjU3MTI1YmE3MjQ2ZGI0NAo2NjJiZTBiYTAxMDU5YTM1NDkxOWE4OTFmYmE1NjgyNQo4ZmQ3
YzM5NjU5ODE5MzE0ODUwNTYzN2RiODRhYzNlMQpiMmJkM2Q1ZjM0YTdmNzI1YjBiN2M5ZmJkM2Nj
NzIxMQo5YWY1NGZhMDY3ODk2MDBjNDQ0YjFmYTIwMWZlMWZjMwo4MzViZDBmMzE1ZjY0MTE1NTk4
Y2E2Y2M4YWE1ZWU0MApmNjYxMDUzMjhmNjBkNzEzOTQ3NGQ1MDJhMjc4Y2Y5MgotLS0tLUVORCBP
cGVuVlBOIFN0YXRpYyBrZXkgVjEtLS0tLQo8L3Rscy1jcnlwdD4K"
services:
 - docker:18-dind

stages:
 - build
 - deploy

docker_build:
 only:
  - master      
 stage: build
 image: docker:18-git
 before_script: 
  - docker login --username alirezasalemi --password 7c429978-fa6b-4ca4-8815-b705a47a81fb
 script:
  - docker build -t alirezasalemi/loghmeh-gui:$CI_COMMIT_SHORT_SHA -t alirezasalemi/loghmeh-gui:latest ./
  - docker push alirezasalemi/loghmeh-gui:$CI_COMMIT_SHORT_SHA
  - docker push alirezasalemi/loghmeh-gui:latest
   
kube_deploy:
#  only:
#   - master      
 stage: deploy
 image: ubuntu:latest
 before_script:
  - echo -n $KUBE_CONFIG | base64 -d > ./config
  - echo -n $OVPN | base64 -d > ./vpn.ovpn
  - which openvpn || (apt-get update -y -qq && apt-get install -y -qq openvpn)
  - which snapd || (apt-get update -y -qq && apt-get install -y -qq snapd)
  - echo y | snap install kubectl --classic
  - openvpn --config ./vpn.ovpn
 script:
  - kubectl set image deployment/loghmeh-gui-deployment loghmeh-gui=alirezasalemi/loghmeh-gui:latest --kubeconfig ./config
 

   
   
   